syntax = "proto3";

package testernet.identity;

import "amino/amino.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "testernet/identity/params.proto";
import "testernet/identity/identity.proto";

option go_package = "testernet/x/identity/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/testernet/identity/params";
  
  }
  
  // Queries a list of Identity items.
  rpc Identity    (QueryGetIdentityRequest) returns (QueryGetIdentityResponse) {
    option (google.api.http).get = "/testernet/identity/identity/{id}";
  
  }
  rpc IdentityAll (QueryAllIdentityRequest) returns (QueryAllIdentityResponse) {
    option (google.api.http).get = "/testernet/identity/identity";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

message QueryGetIdentityRequest {
  uint64 id = 1;
}

message QueryGetIdentityResponse {
  Identity Identity = 1 [(gogoproto.nullable) = false];
}

message QueryAllIdentityRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllIdentityResponse {
  repeated Identity                               Identity   = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

